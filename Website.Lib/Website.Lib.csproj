<Project Sdk="Microsoft.NET.Sdk.Razor">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
	</PropertyGroup>

	<ItemGroup>
		<AssemblyAttribute Include="Website.Lib.BuildDateAttribute">
			<_Parameter1>$([System.DateTime]::UtcNow.ToString("yyyy-MM-dd"))</_Parameter1>
		</AssemblyAttribute>
	</ItemGroup>

	<ItemGroup>
		<SupportedPlatform Include="browser" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Blazored.LocalStorage" Version="4.2.0" />
		<PackageReference Include="GoogleAnalytics.Blazor" Version="1.0.0-preview.3" />
		<PackageReference Include="libphonenumber-csharp" Version="8.12.50" />
		<PackageReference Include="Material.Blazor" Version="3.0.0-preview.2" />
	</ItemGroup>

	<ItemGroup>
		<ImageFiles Include="$(ProjectDir)WebAssets\Images\*.*" />
		<PWAFiles Include="$(ProjectDir)WebAssets\PWA\*.*" />
		<AndroidImageFiles Include="$(ProjectDir)WebAssets\android-images\*.*" />
		<IOSImageFiles Include="$(ProjectDir)WebAssets\ios-images\*.*" />
		<Windows11ImageFiles Include="$(ProjectDir)WebAssets\windows11-images\*.*" />

		<InputStaticAssetsScripts Include="WebAssets\**\*.ts" />
		<OutputStaticAssetsScripts Include="wwwroot\js\dioptra.js;wwwroot\js\dioptra.min.js" />
		<Content Remove="@(OutputStaticAssetsScripts)" />
		<Content Remove="C:\Users\SimonZiegler\.nuget\packages\material.blazor\3.0.0-preview.1\contentFiles\any\net6.0\wwwroot\material-components-web.css" />
		<Content Remove="C:\Users\SimonZiegler\.nuget\packages\material.blazor\3.0.0-preview.1\contentFiles\any\net6.0\wwwroot\material-components-web.min.css" />
		<Content Remove="C:\Users\SimonZiegler\.nuget\packages\material.blazor\3.0.0-preview.1\contentFiles\any\net6.0\wwwroot\material.blazor.css" />
		<Content Remove="C:\Users\SimonZiegler\.nuget\packages\material.blazor\3.0.0-preview.1\contentFiles\any\net6.0\wwwroot\material.blazor.js" />
		<Content Remove="C:\Users\SimonZiegler\.nuget\packages\material.blazor\3.0.0-preview.1\contentFiles\any\net6.0\wwwroot\material.blazor.min.css" />
		<Content Remove="C:\Users\SimonZiegler\.nuget\packages\material.blazor\3.0.0-preview.1\contentFiles\any\net6.0\wwwroot\material.blazor.min.js" />
		<Content Include="@(OutputStaticAssetsScripts)" />

		<InputStaticAssetsStyles Include="WebAssets\**\*.scss;" />
		<OutputStaticAssetsStyles Include="wwwroot\css\dioptra.css;wwwroot\css\dioptra.min.css" />
		<Content Remove="@(OutputStaticAssetsStyles)" />
		<Content Include="@(OutputStaticAssetsStyles)" />
	</ItemGroup>

	<ItemGroup>
		<UpToDateCheckInput Include="@(InputStaticAssetsScripts)" Set="Scripts" />
		<UpToDateCheckOutput Include="@(OutputStaticAssetsScripts)" Set="Scripts" />
		<UpToDateCheckInput Include="@(InputStaticAssetsStyles)" Set="Styles" />
		<UpToDateCheckOutput Include="@(OutputStaticAssetsStyles)" Set="Styles" />
	</ItemGroup>

	<ItemGroup>
		<None Include="website-tsconfig.json" />
	</ItemGroup>

	<Target Name="WWWRootFileCopy" BeforeTargets="PreBuildEvent">
		<Copy SourceFiles="@(ImageFiles)" DestinationFolder="$(ProjectDir)wwwroot/images" />
		<Copy SourceFiles="@(PWAFiles)" DestinationFolder="$(ProjectDir)wwwroot/pwa" />
		<Copy SourceFiles="@(AndroidImageFiles)" DestinationFolder="$(ProjectDir)wwwroot/android-images" />
		<Copy SourceFiles="@(IOSImageFiles)" DestinationFolder="$(ProjectDir)wwwroot/ios-images" />
		<Copy SourceFiles="@(Windows11ImageFiles)" DestinationFolder="$(ProjectDir)wwwroot/windows11-images" />
	</Target>

	<Target Name="CheckIfNpmExists" Inputs="@(InputStaticAssetsScripts);@(InputStaticAssetsStyles)" Outputs="@(OutputStaticAssetsScripts);@(OutputStaticAssetsStyles)" BeforeTargets="PreBuildEvent">
		<Message Text="***** npm install" />
		<Exec Command="npm install" ContinueOnError="true" StandardOutputImportance="low" StandardErrorImportance="low" LogStandardErrorAsError="false" IgnoreExitCode="true">
			<Output TaskParameter="ExitCode" PropertyName="NpmReturnCode" />
		</Exec>
		<Message Text="***** 'npm install' return code was $(NpmReturnCode) (0 indicates npm is available)" />
	</Target>

	<Target Name="ErrorOutput" BeforeTargets="PreBuildEvent" AfterTargets="CheckIfNpmExists" Condition=" '$(NpmReturnCode)' != '0' ">
		<Message Text="**********************************************************************************" />
		<Message Text="**********************************************************************************" />
		<Message Text="**********************************************************************************" />
		<Message Text=" CSS and JS not built due to the lack of a proper development environment" />
		<Message Text=" See https://material-blazor.com/docs/articles/DevelopmentEnvironment.html" />
		<Message Text="**********************************************************************************" />
		<Message Text="**********************************************************************************" />
		<Message Text="**********************************************************************************" />
	</Target>

	<Target Name="BuildScripts" Inputs="@(InputStaticAssetsScripts)" Outputs="@(OutputStaticAssetsScripts)" BeforeTargets="PreBuildEvent" AfterTargets="CheckIfNpmExists" Condition=" '$(NpmReturnCode)' == '0' ">
		<RemoveDir Directories="$(ProjectDir)wwwroot/js" />

		<Message Importance="high" Text="***** npm install" />
		<Exec Command="npm install" />

		<Message Importance="high" Text="***** npm run build-scripts" />
		<Exec Command="npm run build-scripts" />

		<Message Importance="high" Text="***** npm run build-js" />
		<Exec Command="npm run build-js" />

		<Message Importance="high" Text="***** npm run build-min-js" />
		<Exec Command="npm run build-min-js" />

		<Message Importance="high" Text="***** delete *temp.js" />
		<ItemGroup>
			<FilesToDelete Include="wwwroot/js/*temp.js" />
		</ItemGroup>
		<Delete Files="@(FilesToDelete)" />
	</Target>

	<Target Name="BuildStyles" Inputs="@(InputStaticAssetsStyles)" Outputs="@(OutputStaticAssetsStyles)" BeforeTargets="PreBuildEvent" AfterTargets="CheckIfNpmExists" Condition=" '$(NpmReturnCode)' == '0' ">
		<RemoveDir Directories="$(ProjectDir)wwwroot/css" />

		<Message Importance="high" Text="***** npm install" />
		<Exec Command="npm install" />

		<Message Importance="high" Text="***** npm run build-theme" />
		<Exec Command="npm run build-theme" />

		<Message Importance="high" Text="***** npm run build-min-theme" />
		<Exec Command="npm run build-min-theme" />
	</Target>

	<ItemGroup>
		<FilesToHash Include="$(ProjectDir)wwwroot\**\*.js" />
		<HashFileOutput Include="$(ProjectDir)hashes\hashes.csv" />
	</ItemGroup>

	<Target Name="GetHash" AfterTargets="BuildScripts">
		<GetFileHash Files="@(FilesToHash)">
			<Output
				TaskParameter="Items"
				ItemName="FilesWithHashes" />
		</GetFileHash>

		<WriteLinesToFile	File="@(HashFileOutput)"
							Lines="@(FilesWithHashes->'%(Identity),%(FileHash)')"
							Overwrite="true"
							Encoding="Unicode"/>
	</Target>

</Project>
