name: GithubActionsWIP

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]




env:
  blazorServerDockerFile: './Website.BlazorServer/Dockerfile'
  blazorServerAppName: 'website-2203-blazor-server-wip'
  blazorWebAssemblyDockerFile: './Website.BlazorWebAssembly/Server/Dockerfile'
  blazorWebAssemblyAppName: 'website-2203-blazor-webassembly-wip'
  registryName: 'dioptraregistry'
  registryLocation: 'uk south'



jobs:

############################################################################################################
# These jobs are used to gate actions. By creating these jobs we don't need to proliferate the repo checks
############################################################################################################
  perform-deployment:
    name: Perform deployment because running on Dioptra/Website.2203 and user is not dependabot?
    runs-on: ubuntu-latest
    if: github.repository == 'Dioptra/Website.2203' && github.actor != 'dependabot[bot]'
    steps:
    - name: Nothing to see here
      run: echo ""

  skip-deployment:
    name: Skip deployment because not running on Dioptra/Website.2203 or user is dependabot?
    runs-on: ubuntu-latest
    if: github.repository != 'Dioptra/Website.2203' || github.actor == 'dependabot[bot]'
    steps:
    - name: Nothing to see here
      run: echo ""


############################################################################################################
# Store the version information
############################################################################################################
  version:
    name: Set version suffix
    runs-on: ubuntu-latest

    steps:
    - id: get
      run: |
        echo "::set-output name=suffix::$(date +'%Y-%m-%d--%H-%M-%S')--WIP"
    - id: show
      run: |
        echo "Suffix:     ${{ steps.get.outputs.suffix }}"
    outputs:
      suffix: ${{ steps.get.outputs.suffix }}
      

############################################################################################################
# Build blazor server container on forks
############################################################################################################
  build-blazor-server-fork:
    name: Build BlazorServer docker container for forks
    needs: [skip-deployment]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: 'Build docker container'
      run: |
        docker build . --file ${{ env.blazorServerDockerFile }}
   

############################################################################################################
# Build blazor webassembly container on forks
############################################################################################################
  build-blazor-webassembly-fork:
    name: Build BlazorWebAssembly docker container for forks
    needs: [skip-deployment]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: 'Build docker container'
      run: |
        docker build . --file ${{ env.blazorWebAssemblyDockerFile }}
        

############################################################################################################
# Build blazor server container on Dioptra
############################################################################################################
  build-blazor-server-dioptra:
    name: Build BlazorServer docker container
    needs: [version, perform-deployment]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 'Build and push docker container'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . --file ${{ env.blazorServerDockerFile }} --tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.blazorServerAppName }}:${{ needs.version.outputs.suffix }} --build-arg version=${{ needs.version.outputs.suffix }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.blazorServerAppName }}:${{ needs.version.outputs.suffix }}
        

############################################################################################################
# Build blazor webassembly container on Dioptra
############################################################################################################
  build-blazor-webassembly-dioptra:
    name: Build BlazorWebAssembly docker container
    needs: [version, perform-deployment]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 'Build and push docker container'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . --file ${{ env.blazorWebAssemblyDockerFile }} --tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.blazorWebAssemblyAppName }}:${{ needs.version.outputs.suffix }} --build-arg version=${{ needs.version.outputs.suffix }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.blazorWebAssemblyAppName }}:${{ needs.version.outputs.suffix }}
