name: GithubActionsWIP

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]




env:
  blazorServerAppName: 'website-2203-blazor-server-wip'
  blazorWebAssemblyAppName: 'website-2203-blazor-webassembly-wip'
  project: 'Website.Server/Website.Server.csproj'
  registryName: 'dioptraregistry'



jobs:

############################################################################################################
# These jobs are used to gate actions. By creating these jobs we don't need to proliferate the repo checks
############################################################################################################
  build-allowed:
    name: Build allowed
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
    - name: Nothing to see here
      run: echo ""

  deployment-allowed-dioptra:
    name: Perform deployment because running on Dioptra/Website.2203 and user is not dependabot?
    needs: [build-allowed]
    runs-on: ubuntu-latest
    if: github.repository == 'Dioptra/Website.2203'
    steps:
    - name: Nothing to see here
      run: echo ""

  build-allowed-fork:
    name: Skip deployment because not running on Dioptra/Website.2203 or user is dependabot?
    needs: [build-allowed]
    runs-on: ubuntu-latest
    if: github.repository != 'Dioptra/Website.2203'
    steps:
    - name: Nothing to see here
      run: echo ""

############################################################################################################
# Set unified suffix for the two deployed applications
############################################################################################################
  set-suffix:
    name: Create the date based suffix
    needs: [deployment-allowed-dioptra]
    runs-on: ubuntu-latest
    outputs:
      outputSuffix: ${{ steps.setSuffix.outputs.GlobalSuffix }}

    steps:
    - id: setSuffix
      run: echo "GlobalSuffix=$(date +'%Y-%m-%d--%H-%M-%S')--WIP" >> $GITHUB_OUTPUT
      shell: bash

############################################################################################################
# Build blazor server on forks
############################################################################################################
  build-blazor-server-fork:
    name: Build BlazorServer for forks/dependabot
    needs: [build-allowed-fork]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'
        dotnet-quality: 'preview'

    - name: 'Build SSB'
      run: dotnet build  ${{env.project}} --configuration Release_Server
   

############################################################################################################
# Build blazor webassembly on forks
############################################################################################################
  build-blazor-webassembly-fork:
    name: Build BlazorWASM for forks/dependabot
    needs: [build-allowed-fork]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'
        dotnet-quality: 'preview'

    - name: 'Build CSB'
      run: dotnet build ${{env.project}} --configuration Release_WebAssembly
        

############################################################################################################
# Build blazor server container on Dioptra
############################################################################################################
  build-blazor-server:
    name: Build BlazorServer
    needs: [set-suffix, deployment-allowed-dioptra]
    runs-on: ubuntu-latest

    steps:
    - name: Retrieve the global suffix
      run: echo "suffix=${{needs.set-suffix.outputs.outputSuffix}}" >> $GITHUB_ENV
      shell: bash

    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'
        dotnet-quality: 'preview'

    - name: 'Build and push docker container'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - run: dotnet publish ${{env.project}} --os linux --arch x64 --configuration Release_Server -p:PublishProfile=DefaultContainer -p:Version=${{ env.suffix }} -p:ContainerRegistry=${{env.registryname}} -p:ContainerRepository=${{env.blazorServerAppName}} -p:ContainerImageTag=${{ env.suffix }} --self-contained


############################################################################################################
# Build blazor webassembly container on Dioptra
############################################################################################################
  build-blazor-webassembly:
    name: Build BlazorWASM
    needs: [set-suffix, deployment-allowed-dioptra]
    runs-on: ubuntu-latest

    steps:
    - name: Retrieve the global suffix
      run: echo "suffix=${{needs.set-suffix.outputs.outputSuffix}}" >> $GITHUB_ENV
      shell: bash

    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'
        dotnet-quality: 'preview'

    - name: 'Build and push docker container'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - run: dotnet publish ${{env.project}} --os linux --arch x64 --configuration Release_Server -p:PublishProfile=DefaultContainer -p:Version=${{ env.suffix }} -p:ContainerRegistry=${{env.registryname}} -p:ContainerRepository=${{env.blazorWebAssemblyAppName}} -p:ContainerImageTag=${{ env.suffix }} --self-contained
